rules_version='2'

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(resource) {
      return request.auth.uid == resource.data.ownerId;
    }
    
    function belongsToUser(userId) {
      return request.auth.uid == userId;
    }

    // Projects - users can only access their own projects
    match /projects/{projectId} {
      allow read, write: if isAuthenticated() && isOwner(resource);
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.ownerId;
    }

    // Sources - users can only access sources for their projects
    match /sources/{sourceId} {
      allow read, write: if isAuthenticated() && isOwner(resource);
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.ownerId;
    }

    // Source chunks - users can only access chunks for their sources
    match /chunks/{chunkId} {
      allow read, write: if isAuthenticated() && isOwner(resource);
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.ownerId;
    }

    // Drafts - users can only access their own drafts
    match /drafts/{draftId} {
      allow read, write: if isAuthenticated() && isOwner(resource);
      allow create: if isAuthenticated() && request.auth.uid == request.resource.data.ownerId;
    }

    // Allow unrestricted access during emulator development
    match /{document=**} {
      allow read, write: if request.auth.token.firebase.sign_in_provider == 'custom';
    }
  }
}
